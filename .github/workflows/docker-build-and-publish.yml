name: Build and publish docker image

on:
  workflow_call:
    inputs:
      image-name:
        type: string
        required: true
      version-arg-name:
        type: string
        required: false
        default: 'VERSION'
      platforms:
        type: string
        required: false
        default: 'linux/arm/v7,linux/arm64/v8,linux/amd64'
      tags-suffix:
        type: string
        required: false
      extra-build-args:
        type: string
        required: false
        default: ''

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest
      - name: Login to docker hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Login to GitHub container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PAT }}
      - name: Update Docker Hub description
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          repository: ${{ inputs.image-name }}

      - name: Resolve tags to publish
        id: resolve_tags
        shell: bash
        run: |
          DOCKER_IMAGE="${{ inputs.image-name }}"
          TAGS_SUFFIX="${{ inputs.tags-suffix && format('-{0}', inputs.tags-suffix) || '' }}"
          
          # Always build latest
          TAGS="${DOCKER_IMAGE}:latest${TAGS_SUFFIX},ghcr.io/${DOCKER_IMAGE}:latest${TAGS_SUFFIX}"
          
          # Build corresponding exact version tag
          PATCH_VERSION="${GITHUB_REF#refs/tags/v}" # Converts "refs/tags/v4.6.2" into "4.6.2"
          TAGS="${TAGS},${DOCKER_IMAGE}:${PATCH_VERSION}${TAGS_SUFFIX},ghcr.io/${DOCKER_IMAGE}:${PATCH_VERSION}${TAGS_SUFFIX}"
          
          # Build stable, minor version and major version tags only if built version does not contain "alpha", "beta" or "rc" keywords
          if [[ $PATCH_VERSION != *"alpha"* && $PATCH_VERSION != *"beta"*  && $PATCH_VERSION != *"rc"* ]]; then
            TAGS="${TAGS},${DOCKER_IMAGE}:stable${TAGS_SUFFIX},ghcr.io/${DOCKER_IMAGE}:stable${TAGS_SUFFIX}"
            
            MINOR_VERSION="${PATCH_VERSION%.*}" # Converts "4.6.2" into "4.6"
            TAGS="${TAGS},${DOCKER_IMAGE}:${MINOR_VERSION}${TAGS_SUFFIX},ghcr.io/${DOCKER_IMAGE}:${MINOR_VERSION}${TAGS_SUFFIX}"
            
            MAJOR_VERSION="${MINOR_VERSION%.*}" # Converts "4.6" into "4"
            TAGS="${TAGS},${DOCKER_IMAGE}:${MAJOR_VERSION}${TAGS_SUFFIX},ghcr.io/${DOCKER_IMAGE}:${MAJOR_VERSION}${TAGS_SUFFIX}"
          fi
          
          echo "version=$PATCH_VERSION" >> $GITHUB_OUTPUT
          echo "tags=$TAGS" >> $GITHUB_OUTPUT

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.resolve_tags.outputs.tags }}
          build-args: |
            ${{ inputs.version-arg-name }}=${{ steps.resolve_tags.outputs.version }}
            ${{ inputs.extra-build-args }}
          platforms: ${{ inputs.platforms }}
