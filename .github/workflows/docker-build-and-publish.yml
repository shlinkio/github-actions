name: Build and publish docker image

on:
  workflow_call:
    inputs:
      image-name:
        type: string
        required: true
      version-arg-name:
        type: string
        required: true
        default: 'VERSION'
      platforms:
        type: string
        required: true
        default: 'linux/arm/v7,linux/arm64/v8,linux/amd64'

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: latest
      - name: Login to docker hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Login to GitHub container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PAT }}
      - name: Update Docker Hub description
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Resolve tags to publish
        id: resolve_tags
        run: |
          DOCKER_IMAGE="${{ inputs.image-name }}" \
          [[ "$GITHUB_REF" == *"develop"* ]] && VERSION="latest" || VERSION=${GITHUB_REF#refs/tags/v} \
          TAGS="${DOCKER_IMAGE}:${VERSION},ghcr.io/${DOCKER_IMAGE}:${VERSION}" \
          if [[ "$GITHUB_REF" != *"develop"* && $GITHUB_REF != *"alpha"* && $GITHUB_REF != *"beta"* ]]; then \
            # Push stable tag only if this is not an alpha or beta release \
            TAGS="${TAGS},${DOCKER_IMAGE}:stable,ghcr.io/${DOCKER_IMAGE}:stable"; \
          fi; \
          echo "::set-output name=version::$VERSION" \
          echo "::set-output name=tags::$TAGS"
        shell: bash
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.resolve_tags.outputs.tags }}
          build-args: ${{ inputs.version-arg-name }}=${{ steps.resolve_tags.outputs.version }}
          platforms: ${{ inputs.platforms }}
